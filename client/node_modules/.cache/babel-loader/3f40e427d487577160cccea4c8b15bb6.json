{"ast":null,"code":"var _jsxFileName = \"/Users/crazynuget/Desktop/Projects/Redux-Store/client/src/components/CategoryMenu/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryMenu(_ref) {\n  _s();\n\n  let {\n    categories\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryMenu, \"PcwDvYCxf/NoZA8J4S+LtubhYfo=\", false, function () {\n  return [useDispatch, useQuery];\n});\n\n_c = CategoryMenu;\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories\n  };\n};\n\nexport default connect(mapStateToProps)(CategoryMenu);\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"sources":["/Users/crazynuget/Desktop/Projects/Redux-Store/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","useDispatch","connect","CategoryMenu","categories","dispatch","loading","data","categoryData","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SACEC,iBADF,EAEEC,uBAFF,QAGO,qBAHP;AAIA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;;;AAEA,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAClC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCZ,QAAQ,CAACG,gBAAD,CAAhD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,YAAJ,EAAkB;AAChBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEZ,iBADC;AAEPO,QAAAA,UAAU,EAAEI,YAAY,CAACJ;AAFlB,OAAD,CAAR;AAIAI,MAAAA,YAAY,CAACJ,UAAb,CAAwBM,OAAxB,CAAiCC,QAAD,IAAc;AAC5CX,QAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBW,QAAtB,CAAV;AACD,OAFD;AAGD,KARD,MAQO,IAAI,CAACL,OAAL,EAAc;AACnBN,MAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCY,IAAhC,CAAsCR,UAAD,IAAgB;AACnDC,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAEZ,iBADC;AAEPO,UAAAA,UAAU,EAAEA;AAFL,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAjBQ,EAiBN,CAACI,YAAD,EAAeF,OAAf,EAAwBD,QAAxB,CAjBM,CAAT;;AAmBA,QAAMQ,WAAW,GAAIC,EAAD,IAAQ;AAC1BT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX,uBADC;AAEPiB,MAAAA,eAAe,EAAED;AAFV,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGV,UAAU,CAACY,GAAX,CAAgBC,IAAD,iBACd;AAEE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX;AACD,OAJH;AAAA,gBAMGD,IAAI,CAACE;AANR,OACOF,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA9CQf,Y;UACUF,W,EAEuBL,Q;;;KAHjCO,Y;;AAgDT,MAAMiB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLjB,IAAAA,UAAU,EAAEiB,KAAK,CAACjB;AADb,GAAP;AAGD,CAJD;;AAMA,eAAeF,OAAO,CAACkB,eAAD,CAAP,CAAyBjB,YAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, connect } from 'react-redux';\n\nfunction CategoryMenu({categories}) {\n  const dispatch = useDispatch();\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories\n  }\n};\n\nexport default connect(mapStateToProps)(CategoryMenu);"]},"metadata":{},"sourceType":"module"}